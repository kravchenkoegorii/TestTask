// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestTask.Persistence.Database;

#nullable disable

namespace TestTask.Persistence.Migrations
{
    [DbContext(typeof(TestTaskDbContext))]
    [Migration("20230301224102_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestTask.Domain.Models.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Professors", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Vladimir",
                            SubjectName = "Math",
                            Surname = "Surname"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Egor",
                            SubjectName = "English",
                            Surname = "Surname"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Igor",
                            SubjectName = "Geometry",
                            Surname = "Surname"
                        });
                });

            modelBuilder.Entity("TestTask.Domain.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Students", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Group = "PZ-21-3",
                            Name = "A",
                            ProfessorId = 1,
                            Surname = "A"
                        },
                        new
                        {
                            Id = 2,
                            Group = "PZ-21-3",
                            Name = "B",
                            ProfessorId = 1,
                            Surname = "B"
                        },
                        new
                        {
                            Id = 3,
                            Group = "PZ-21-2",
                            Name = "C",
                            ProfessorId = 2,
                            Surname = "C"
                        },
                        new
                        {
                            Id = 4,
                            Group = "PZ-21-2",
                            Name = "D",
                            ProfessorId = 2,
                            Surname = "D"
                        },
                        new
                        {
                            Id = 5,
                            Group = "PZ-21-2",
                            Name = "E",
                            ProfessorId = 3,
                            Surname = "E"
                        },
                        new
                        {
                            Id = 6,
                            Group = "PZ-21-1",
                            Name = "F",
                            ProfessorId = 3,
                            Surname = "F"
                        },
                        new
                        {
                            Id = 7,
                            Group = "PZ-21-1",
                            Name = "G",
                            ProfessorId = 3,
                            Surname = "G"
                        });
                });

            modelBuilder.Entity("TestTask.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TestTask.Domain.Models.Student", b =>
                {
                    b.HasOne("TestTask.Domain.Models.Professor", "Professor")
                        .WithMany("Students")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("TestTask.Domain.Models.Professor", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
